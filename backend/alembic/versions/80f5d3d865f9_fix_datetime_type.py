"""fix datetime type

Revision ID: 80f5d3d865f9
Revises: 
Create Date: 2025-05-20 18:28:14.014708

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '80f5d3d865f9'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('contents',
    sa.Column('id', sa.Integer(), nullable=False, comment='コンテンツに自動的に割り振られるID'),
    sa.Column('content', sa.TEXT(), nullable=False, comment='yaml内のコンテンツを格納'),
    sa.Column('created', sa.DateTime(), nullable=False, comment='コンテンツを登録した日時'),
    sa.Column('last_updated', sa.DateTime(), nullable=False, comment='コンテンツの最終更新日時'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_contents_id'), 'contents', ['id'], unique=False)
    op.create_table('user_kind',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('kind_name', sa.String(length=128), nullable=False, comment='ユーザの種別名'),
    sa.Column('create', sa.Boolean(), nullable=False, comment='コースやフローを作成する権限があるか'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_kind_id'), 'user_kind', ['id'], unique=False)
    op.create_table('announcements',
    sa.Column('id', sa.Integer(), nullable=False, comment='お知らせID'),
    sa.Column('title', sa.String(length=255), nullable=False, comment='お知らせタイトル'),
    sa.Column('content', sa.Text(), nullable=False, comment='お知らせ内容'),
    sa.Column('start_date_time', sa.DateTime(), nullable=False, comment='表示開始日時'),
    sa.Column('end_date_time', sa.DateTime(), nullable=False, comment='表示終了日時'),
    sa.Column('sender', sa.String(length=255), nullable=False, comment='送信者'),
    sa.Column('send_date_time', sa.DateTime(), nullable=False, comment='送信日時'),
    sa.Column('user_kind_id', sa.Integer(), nullable=False, comment='ユーザーの種類ID'),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['user_kind_id'], ['user_kind.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_announcements_id'), 'announcements', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=256), nullable=False),
    sa.Column('email', sa.String(length=256), nullable=False),
    sa.Column('hashed_password', sa.String(length=1024), nullable=False),
    sa.Column('user_kind_id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['user_kind_id'], ['user_kind.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('access_histories',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('time', sa.Integer(), nullable=True),
    sa.Column('page', sa.String(length=128), nullable=False),
    sa.Column('details', sa.String(length=512), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'date', 'page', 'details')
    )
    op.create_table('announcement_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('announcement_id', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(length=50), nullable=False),
    sa.Column('action_date_time', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['announcement_id'], ['announcements.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_announcement_logs_id'), 'announcement_logs', ['id'], unique=False)
    op.create_table('goals',
    sa.Column('goal_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('details', sa.String(length=128), nullable=True),
    sa.Column('completed', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('goal_id')
    )
    op.create_table('login',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('login_day', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'login_day')
    )
    op.create_table('pointlist',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.String(length=64), nullable=True),
    sa.Column('point', sa.Integer(), nullable=True),
    sa.Column('flag', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('students',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('grade', sa.Integer(), nullable=True),
    sa.Column('department', sa.String(length=32), nullable=True),
    sa.Column('classes', sa.Integer(), nullable=True),
    sa.Column('number', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subjects',
    sa.Column('id', sa.Integer(), nullable=False, comment='科目ID'),
    sa.Column('subject_name', sa.String(length=256), nullable=False, comment='科目名'),
    sa.Column('period', sa.String(length=256), nullable=False, comment='開講時期'),
    sa.Column('created', sa.DateTime(), nullable=False, comment='作成日時'),
    sa.Column('created_by', sa.Integer(), nullable=False, comment='作成者'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='有効化'),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_subjects_id'), 'subjects', ['id'], unique=False)
    op.create_table('user_announcements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('announcement_id', sa.Integer(), nullable=False),
    sa.Column('is_read', sa.Boolean(), nullable=False),
    sa.Column('read_date_time', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['announcement_id'], ['announcements.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_announcements_id'), 'user_announcements', ['id'], unique=False)
    op.create_table('user_com',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('nickname', sa.String(length=32), nullable=True),
    sa.Column('theme', sa.String(length=32), nullable=True),
    sa.Column('point', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('courses',
    sa.Column('id', sa.Integer(), nullable=False, comment='コースID'),
    sa.Column('subject_id', sa.Integer(), nullable=False, comment='科目ID'),
    sa.Column('course_name', sa.String(length=128), nullable=False, comment='コース名'),
    sa.Column('weeks', sa.Integer(), nullable=False, comment='週数'),
    sa.Column('start_date_time', sa.DateTime(), nullable=False, comment='開始日時'),
    sa.Column('end_date_time', sa.DateTime(), nullable=False, comment='終了日時'),
    sa.Column('created', sa.DateTime(), nullable=False, comment='作成日時'),
    sa.Column('created_by', sa.Integer(), nullable=False, comment='作成者'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='コース有効化'),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_courses_id'), 'courses', ['id'], unique=False)
    op.create_table('subject_info_syllubus',
    sa.Column('subject_id', sa.Integer(), nullable=False, comment='科目ID'),
    sa.Column('subject_class', sa.String(length=128), nullable=False, comment='授業科目区分'),
    sa.Column('subject_credit', sa.Integer(), nullable=False, comment='単位'),
    sa.Column('subject_code', sa.String(length=128), nullable=False, comment='科目コード'),
    sa.Column('subject_keyword', sa.TEXT(), nullable=False, comment='キーワード'),
    sa.Column('subject_goals', sa.TEXT(), nullable=False, comment='学習・教育目標'),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('subject_id')
    )
    op.create_table('course_grant',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('start_date_time', sa.DateTime(), nullable=False, comment='権限が有効になる日時.'),
    sa.Column('end_date_time', sa.DateTime(), nullable=False, comment='権限が失効する日時'),
    sa.Column('read_answer', sa.Boolean(), nullable=False, comment='読取権限.'),
    sa.Column('update_answer', sa.Boolean(), nullable=False, comment='更新権限'),
    sa.Column('delete_answer', sa.Boolean(), nullable=False, comment='削除権限'),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'course_id')
    )
    op.create_table('taking_course',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'course_id')
    )
    op.create_table('weeks',
    sa.Column('id', sa.Integer(), nullable=False, comment='WeekID'),
    sa.Column('course_id', sa.Integer(), nullable=False, comment='コースID'),
    sa.Column('week_name', sa.String(length=128), nullable=False, comment='Week名'),
    sa.Column('week_num', sa.Integer(), nullable=False, comment='第〇週, 第〇回'),
    sa.Column('order', sa.Integer(), nullable=False, comment='並び順（同週内）'),
    sa.Column('created', sa.DateTime(), nullable=False, comment='作成日時'),
    sa.Column('created_by', sa.Integer(), nullable=False, comment='作成者'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='週有効化'),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_weeks_id'), 'weeks', ['id'], unique=False)
    op.create_table('blocks',
    sa.Column('id', sa.Integer(), nullable=False, comment='block_id'),
    sa.Column('week_id', sa.Integer(), nullable=False, comment='対応するweek_id'),
    sa.Column('page', sa.Integer(), nullable=False, comment='コンテンツのページ番号'),
    sa.Column('content_id', sa.Integer(), nullable=False, comment='対応するcontent_id'),
    sa.Column('origin_content_id', sa.Integer(), nullable=False, comment='置換前のcontent_id'),
    sa.ForeignKeyConstraint(['content_id'], ['contents.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['origin_content_id'], ['contents.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['week_id'], ['weeks.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_blocks_id'), 'blocks', ['id'], unique=False)
    op.create_table('flows',
    sa.Column('id', sa.Integer(), nullable=False, comment='演習問題ID'),
    sa.Column('id_in_yml', sa.String(length=256), nullable=False, comment='yml内でのid'),
    sa.Column('week_id', sa.Integer(), nullable=False, comment='対応するweek_id'),
    sa.Column('title', sa.String(length=128), nullable=False, comment='演習問題名'),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('welcome_page_content_id', sa.Integer(), nullable=False, comment='演習前コンテンツid'),
    sa.Column('completion_page_content_id', sa.Integer(), nullable=False, comment='演習後コンテンツid'),
    sa.ForeignKeyConstraint(['completion_page_content_id'], ['contents.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['week_id'], ['weeks.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['welcome_page_content_id'], ['contents.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_flows_id'), 'flows', ['id'], unique=False)
    op.create_table('images',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=30), nullable=True, comment='画像ファイル名.'),
    sa.Column('week_id', sa.Integer(), nullable=True, comment='week_content登録時に画像がある場合、week_idを保持しておく'),
    sa.Column('imgdata', sa.LargeBinary(length=4294967295), nullable=True),
    sa.ForeignKeyConstraint(['week_id'], ['weeks.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_images_id'), 'images', ['id'], unique=False)
    op.create_table('IRT_Ability',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('flow_id', sa.Integer(), nullable=False),
    sa.Column('ability', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['flow_id'], ['flows.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'flow_id')
    )
    op.create_table('block_rules',
    sa.Column('block_id', sa.Integer(), nullable=False),
    sa.Column('start_date_time', sa.DateTime(), nullable=True, comment='Blockの表示を開始する日時'),
    sa.Column('end_date_time', sa.DateTime(), nullable=True, comment='Blockの表示を終了する日時'),
    sa.Column('always', sa.Boolean(), nullable=True, comment='このBlockを常に表示するか'),
    sa.ForeignKeyConstraint(['block_id'], ['blocks.id'], ),
    sa.PrimaryKeyConstraint('block_id')
    )
    op.create_table('flow_grant',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('flow_id', sa.Integer(), nullable=False),
    sa.Column('start_date_time', sa.DateTime(), nullable=False, comment='権限が有効になる日時'),
    sa.Column('end_date_time', sa.DateTime(), nullable=False, comment='権限が無効になる日時'),
    sa.Column('read_answer', sa.Boolean(), nullable=False, comment='読取権限'),
    sa.Column('update_answer', sa.Boolean(), nullable=False, comment='更新権限'),
    sa.Column('delete_answer', sa.Boolean(), nullable=False, comment='削除権限'),
    sa.ForeignKeyConstraint(['flow_id'], ['flows.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'flow_id')
    )
    op.create_table('flow_rules',
    sa.Column('flow_id', sa.Integer(), nullable=False),
    sa.Column('check_answer_timing', sa.String(length=32), nullable=True, comment='答え合わせするタイミング．["None", "submit_page", "end_of_flow"]'),
    sa.Column('challenge_limit', sa.Integer(), nullable=True, comment='挑戦できる回数'),
    sa.Column('restart_session', sa.Boolean(), nullable=False, comment='中断したセッションのリスタートできるか'),
    sa.Column('time_limit', sa.TIME(), nullable=True, comment='Flowの制限時間を設定する'),
    sa.Column('start_date_time', sa.DateTime(), nullable=True, comment='Flowの表示を開始する日時．'),
    sa.Column('end_answer_date_time', sa.DateTime(), nullable=True, comment='Flowの表示を終了する日時．'),
    sa.Column('end_read_date_time', sa.DateTime(), nullable=True, comment='Flowの閲覧を終了する日時'),
    sa.Column('always', sa.Boolean(), nullable=True, comment='このFlowを常に表示するか'),
    sa.ForeignKeyConstraint(['flow_id'], ['flows.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('flow_id')
    )
    op.create_table('flow_sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('flow_id', sa.Integer(), nullable=False),
    sa.Column('start_date_time', sa.DateTime(), nullable=True, comment='セッションを開始した日時'),
    sa.Column('finish_date_time', sa.DateTime(), nullable=True, comment='セッションを終了した日時'),
    sa.Column('is_finished', sa.Boolean(), nullable=True, comment='セッションを終了したか'),
    sa.Column('flow_session_grade', sa.Float(), nullable=True, comment='正答率'),
    sa.ForeignKeyConstraint(['flow_id'], ['flows.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_flow_sessions_id'), 'flow_sessions', ['id'], unique=False)
    op.create_table('page_groups',
    sa.Column('id', sa.Integer(), nullable=False, comment='ページのまとまり'),
    sa.Column('group_name', sa.String(length=128), nullable=False, comment='グループ名(ymlで入力)'),
    sa.Column('flow_id', sa.Integer(), nullable=False, comment='対応するFlow'),
    sa.Column('order', sa.Integer(), nullable=False, comment='Flowの中での順番'),
    sa.ForeignKeyConstraint(['flow_id'], ['flows.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_page_groups_id'), 'page_groups', ['id'], unique=False)
    op.create_table('flowpages',
    sa.Column('id', sa.Integer(), nullable=False, comment='問題ID'),
    sa.Column('title', sa.String(length=128), nullable=False, comment='問題名'),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('page_type', sa.String(length=128), nullable=False, comment='ページ種別'),
    sa.Column('page_group', sa.Integer(), nullable=False, comment='ページグループ'),
    sa.Column('order', sa.Integer(), nullable=False, comment='ページグループ内での順番'),
    sa.Column('content_id', sa.Integer(), nullable=False, comment='問題コンテンツid'),
    sa.Column('hint_comment_id', sa.Integer(), nullable=False, comment='ヒントコンテンツid'),
    sa.Column('answer_comment_id', sa.Integer(), nullable=False, comment='解説コンテンツid'),
    sa.Column('origin_content_id', sa.Integer(), nullable=False, comment='置換前の問題コンテンツ'),
    sa.Column('origin_hint_comment_id', sa.Integer(), nullable=False, comment='置換前のヒントコンテンツ'),
    sa.Column('origin_answer_comment_id', sa.Integer(), nullable=False, comment='置換前の解説コンテンツid'),
    sa.ForeignKeyConstraint(['answer_comment_id'], ['contents.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['content_id'], ['contents.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['hint_comment_id'], ['contents.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['origin_answer_comment_id'], ['contents.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['origin_content_id'], ['contents.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['origin_hint_comment_id'], ['contents.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['page_group'], ['page_groups.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_flowpages_id'), 'flowpages', ['id'], unique=False)
    op.create_table('blanks',
    sa.Column('id', sa.Integer(), nullable=False, comment='解答欄ID'),
    sa.Column('blank_name', sa.String(length=256), nullable=True, comment='解答欄名'),
    sa.Column('flowpage_id', sa.Integer(), nullable=True, comment='対応するフローページ'),
    sa.ForeignKeyConstraint(['flowpage_id'], ['flowpages.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_blanks_id'), 'blanks', ['id'], unique=False)
    op.create_table('flow_session_flow_page',
    sa.Column('flow_session_id', sa.Integer(), nullable=False),
    sa.Column('flowpage_id', sa.Integer(), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False, comment='フローセッション内での表示順序'),
    sa.Column('submitted', sa.Boolean(), nullable=True, comment='問題を解答したか'),
    sa.Column('is_correct', sa.Boolean(), nullable=True, comment='解答が正解か'),
    sa.ForeignKeyConstraint(['flow_session_id'], ['flow_sessions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['flowpage_id'], ['flowpages.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('flow_session_id', 'flowpage_id')
    )
    op.create_table('questions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['flowpages.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('choice_questions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['questions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('correct_answers',
    sa.Column('id', sa.Integer(), nullable=False, comment='正答ID'),
    sa.Column('blank_id', sa.Integer(), nullable=False, comment='対応する解答欄ID'),
    sa.Column('type', sa.String(length=32), nullable=False, comment='解答の型'),
    sa.Column('value', sa.String(length=256), nullable=False, comment='問題の正答'),
    sa.ForeignKeyConstraint(['blank_id'], ['blanks.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_correct_answers_id'), 'correct_answers', ['id'], unique=False)
    op.create_table('descriptive_text_questions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['questions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('flow_session_blank_answer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('flow_session_id', sa.Integer(), nullable=False),
    sa.Column('flowpage_id', sa.Integer(), nullable=False),
    sa.Column('blank_id', sa.Integer(), nullable=False),
    sa.Column('answer', sa.TEXT(), nullable=True, comment='ユーザが解答した内容'),
    sa.Column('created', sa.DateTime(), nullable=False, comment='解答日時'),
    sa.ForeignKeyConstraint(['blank_id'], ['blanks.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['flow_session_id'], ['flow_sessions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['flowpage_id'], ['flowpages.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_flow_session_blank_answer_id'), 'flow_session_blank_answer', ['id'], unique=False)
    op.create_table('multiple_text_questions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('answer_column_content_id', sa.Integer(), nullable=False),
    sa.Column('origin_answer_column_content_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['answer_column_content_id'], ['contents.id'], ),
    sa.ForeignKeyConstraint(['id'], ['questions.id'], ),
    sa.ForeignKeyConstraint(['origin_answer_column_content_id'], ['contents.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('single_text_questions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['questions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('choice_question_choices',
    sa.Column('id', sa.String(length=256), nullable=False),
    sa.Column('flowpage_id', sa.Integer(), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False, comment='選択肢内での表示順序. 小さいものから順に表示される. 同じページ内で一意.'),
    sa.Column('content_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['content_id'], ['contents.id'], ),
    sa.ForeignKeyConstraint(['flowpage_id'], ['choice_questions.id'], ),
    sa.PrimaryKeyConstraint('id', 'flowpage_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('choice_question_choices')
    op.drop_table('single_text_questions')
    op.drop_table('multiple_text_questions')
    op.drop_index(op.f('ix_flow_session_blank_answer_id'), table_name='flow_session_blank_answer')
    op.drop_table('flow_session_blank_answer')
    op.drop_table('descriptive_text_questions')
    op.drop_index(op.f('ix_correct_answers_id'), table_name='correct_answers')
    op.drop_table('correct_answers')
    op.drop_table('choice_questions')
    op.drop_table('questions')
    op.drop_table('flow_session_flow_page')
    op.drop_index(op.f('ix_blanks_id'), table_name='blanks')
    op.drop_table('blanks')
    op.drop_index(op.f('ix_flowpages_id'), table_name='flowpages')
    op.drop_table('flowpages')
    op.drop_index(op.f('ix_page_groups_id'), table_name='page_groups')
    op.drop_table('page_groups')
    op.drop_index(op.f('ix_flow_sessions_id'), table_name='flow_sessions')
    op.drop_table('flow_sessions')
    op.drop_table('flow_rules')
    op.drop_table('flow_grant')
    op.drop_table('block_rules')
    op.drop_table('IRT_Ability')
    op.drop_index(op.f('ix_images_id'), table_name='images')
    op.drop_table('images')
    op.drop_index(op.f('ix_flows_id'), table_name='flows')
    op.drop_table('flows')
    op.drop_index(op.f('ix_blocks_id'), table_name='blocks')
    op.drop_table('blocks')
    op.drop_index(op.f('ix_weeks_id'), table_name='weeks')
    op.drop_table('weeks')
    op.drop_table('taking_course')
    op.drop_table('course_grant')
    op.drop_table('subject_info_syllubus')
    op.drop_index(op.f('ix_courses_id'), table_name='courses')
    op.drop_table('courses')
    op.drop_table('user_com')
    op.drop_index(op.f('ix_user_announcements_id'), table_name='user_announcements')
    op.drop_table('user_announcements')
    op.drop_index(op.f('ix_subjects_id'), table_name='subjects')
    op.drop_table('subjects')
    op.drop_table('students')
    op.drop_table('pointlist')
    op.drop_table('login')
    op.drop_table('goals')
    op.drop_index(op.f('ix_announcement_logs_id'), table_name='announcement_logs')
    op.drop_table('announcement_logs')
    op.drop_table('access_histories')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_announcements_id'), table_name='announcements')
    op.drop_table('announcements')
    op.drop_index(op.f('ix_user_kind_id'), table_name='user_kind')
    op.drop_table('user_kind')
    op.drop_index(op.f('ix_contents_id'), table_name='contents')
    op.drop_table('contents')
    # ### end Alembic commands ###
